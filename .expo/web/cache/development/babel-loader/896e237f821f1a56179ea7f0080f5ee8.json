{"ast":null,"code":"var _jsxFileName = \"/Users/user/ReactNative Project/ReactNative-Shop-App/screens/shop/CartScreen.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport Colors from \"../../constants/Colors\";\nimport CartItem from \"../../components/shop/CartItem\";\nimport Card from \"../../components/UI/Card\";\nimport * as cartActions from \"../../store/actions/cart\";\nimport * as ordersActions from \"../../store/actions/orders\";\n\nvar CartScreen = props => {\n  var cartTotalAmount = useSelector(state => state.cart.totalAmount);\n  var cartItems = useSelector(state => {\n    var transformedCartItems = [];\n\n    for (var key in state.cart.items) {\n      transformedCartItems.push({\n        productId: key,\n        productTitle: state.cart.items[key].productTitle,\n        productPrice: state.cart.items[key].productPrice,\n        quantity: state.cart.items[key].quantity,\n        sum: state.cart.items[key].sum\n      });\n    }\n\n    return transformedCartItems.sort((a, b) => a.productId > b.productId ? 1 : -1);\n  });\n  var dispatch = useDispatch();\n  return React.createElement(View, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(Card, {\n    style: styles.summary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.summaryText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Total:\", ' ', React.createElement(Text, {\n    style: styles.amount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"$\", Math.round(cartTotalAmount.toFixed(2) * 100) / 100)), React.createElement(Button, {\n    color: Colors.accent,\n    title: \"Order Now\",\n    disabled: cartItems.length === 0,\n    onPress: () => {\n      dispatch(ordersActions.addOrder(cartItems, cartTotalAmount));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), React.createElement(FlatList, {\n    data: cartItems,\n    keyExtractor: item => item.productId,\n    renderItem: itemData => React.createElement(CartItem, {\n      quantity: itemData.item.quantity,\n      title: itemData.item.productTitle,\n      amount: itemData.item.sum,\n      deletable: true,\n      onRemove: () => {\n        dispatch(cartActions.removeFromCart(itemData.item.productId));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n};\n\nCartScreen.navigationOptions = {\n  headerTitle: 'Your Cart'\n};\nvar styles = StyleSheet.create({\n  screen: {\n    margin: 20\n  },\n  summary: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n    padding: 10\n  },\n  summaryText: {\n    fontFamily: 'open-sans-bold',\n    fontSize: 18\n  },\n  amount: {\n    color: Colors.primary\n  }\n});\nexport default CartScreen;","map":{"version":3,"sources":["/Users/user/ReactNative Project/ReactNative-Shop-App/screens/shop/CartScreen.js"],"names":["React","useSelector","useDispatch","Colors","CartItem","Card","cartActions","ordersActions","CartScreen","props","cartTotalAmount","state","cart","totalAmount","cartItems","transformedCartItems","key","items","push","productId","productTitle","productPrice","quantity","sum","sort","a","b","dispatch","styles","screen","summary","summaryText","amount","Math","round","toFixed","accent","length","addOrder","item","itemData","removeFromCart","navigationOptions","headerTitle","StyleSheet","create","margin","flexDirection","alignItems","justifyContent","marginBottom","padding","fontFamily","fontSize","color","primary"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, FlatList, Button, StyleSheet } from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Colors from '../../constants/Colors';\nimport CartItem from '../../components/shop/CartItem';\nimport Card from '../../components/UI/Card';\nimport * as cartActions from '../../store/actions/cart';\nimport * as ordersActions from '../../store/actions/orders';\n\nconst CartScreen = props => {\n  const cartTotalAmount = useSelector(state => state.cart.totalAmount);\n  const cartItems = useSelector(state => {\n    const transformedCartItems = [];\n    for (const key in state.cart.items) {\n      transformedCartItems.push({\n        productId: key,\n        productTitle: state.cart.items[key].productTitle,\n        productPrice: state.cart.items[key].productPrice,\n        quantity: state.cart.items[key].quantity,\n        sum: state.cart.items[key].sum\n      });\n    }\n    return transformedCartItems.sort((a, b) =>\n      a.productId > b.productId ? 1 : -1\n    );\n  });\n  const dispatch = useDispatch();\n\n  return (\n    <View style={styles.screen}>\n      <Card style={styles.summary}>\n        <Text style={styles.summaryText}>\n          Total:{' '}\n          <Text style={styles.amount}>\n            ${Math.round(cartTotalAmount.toFixed(2) * 100) / 100}\n          </Text>\n        </Text>\n        <Button\n          color={Colors.accent}\n          title=\"Order Now\"\n          disabled={cartItems.length === 0}\n          onPress={() => {\n            dispatch(ordersActions.addOrder(cartItems, cartTotalAmount));\n          }}\n        />\n      </Card>\n      <FlatList\n        data={cartItems}\n        keyExtractor={item => item.productId}\n        renderItem={itemData => (\n          <CartItem\n            quantity={itemData.item.quantity}\n            title={itemData.item.productTitle}\n            amount={itemData.item.sum}\n            deletable\n            onRemove={() => {\n              dispatch(cartActions.removeFromCart(itemData.item.productId));\n            }}\n          />\n        )}\n      />\n    </View>\n  );\n};\n\nCartScreen.navigationOptions = {\n  headerTitle: 'Your Cart'\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    margin: 20\n  },\n  summary: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n    padding: 10\n  },\n  summaryText: {\n    fontFamily: 'open-sans-bold',\n    fontSize: 18\n  },\n  amount: {\n    color: Colors.primary\n  }\n});\n\nexport default CartScreen;\n"]},"metadata":{},"sourceType":"module"}