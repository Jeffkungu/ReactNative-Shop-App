{"ast":null,"code":"var _jsxFileName = \"/Users/user/ReactNative Project/ReactNative-Shop-App/node_modules/react-navigation-header-buttons/src/OverflowButton.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { HeaderButton } from \"./HeaderButton\";\nimport { OVERFLOW_BUTTON_TEST_ID } from \"./e2e\";\nimport { defaultOnOverflowMenuPress } from \"./overflowMenuPressHandlers\";\nexport class OverflowButton extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.setOverflowRef = ref => {\n      this.overflowRef = ref;\n    };\n\n    this.getOverflowButtonElement = () => this.props.OverflowIcon;\n\n    this.showOverflowPopup = () => {\n      var {\n        onOverflowMenuPress,\n        hiddenButtons\n      } = this.props;\n      onOverflowMenuPress({\n        hiddenButtons,\n        overflowButtonRef: this.overflowRef\n      });\n    };\n  }\n\n  render() {\n    var {\n      buttonWrapperStyle,\n      testID\n    } = this.props;\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      ref: this.setOverflowRef,\n      style: styles.overflowMenuView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), React.createElement(HeaderButton, {\n      title: OVERFLOW_BUTTON_TEST_ID,\n      getButtonElement: this.getOverflowButtonElement,\n      onPress: this.showOverflowPopup,\n      buttonWrapperStyle: [styles.icon, buttonWrapperStyle],\n      testID: testID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nOverflowButton.defaultProps = {\n  testID: OVERFLOW_BUTTON_TEST_ID,\n  onOverflowMenuPress: defaultOnOverflowMenuPress\n};\nvar styles = StyleSheet.create({\n  overflowMenuView: {\n    position: 'absolute',\n    top: -10,\n    right: 0,\n    backgroundColor: 'transparent',\n    width: 1,\n    height: 1\n  },\n  icon: _objectSpread({\n    marginTop: 2\n  }, Platform.select({\n    android: {\n      marginRight: 9,\n      marginLeft: 7\n    }\n  }))\n});","map":{"version":3,"sources":["/Users/user/ReactNative Project/ReactNative-Shop-App/node_modules/react-navigation-header-buttons/src/OverflowButton.js"],"names":["React","HeaderButton","OVERFLOW_BUTTON_TEST_ID","defaultOnOverflowMenuPress","OverflowButton","Component","setOverflowRef","ref","overflowRef","getOverflowButtonElement","props","OverflowIcon","showOverflowPopup","onOverflowMenuPress","hiddenButtons","overflowButtonRef","render","buttonWrapperStyle","testID","styles","overflowMenuView","icon","defaultProps","StyleSheet","create","position","top","right","backgroundColor","width","height","marginTop","Platform","select","android","marginRight","marginLeft"],"mappings":";;;;;;;;AAGA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,SAASC,YAAT;AAEA,SAASC,uBAAT;AACA,SACEC,0BADF;AAiBA,OAAO,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAAoD;AAAA;AAAA;;AAAA,SAQzDC,cARyD,GAQvCC,GAAD,IAAgB;AAC/B,WAAKC,WAAL,GAAmBD,GAAnB;AACD,KAVwD;;AAAA,SA6BzDE,wBA7ByD,GA6B9B,MAAM,KAAKC,KAAL,CAAWC,YA7Ba;;AAAA,SA+BzDC,iBA/ByD,GA+BrC,MAAM;AACxB,UAAM;AAAEC,QAAAA,mBAAF;AAAuBC,QAAAA;AAAvB,UAAyC,KAAKJ,KAApD;AACAG,MAAAA,mBAAmB,CAAC;AAAEC,QAAAA,aAAF;AAAiBC,QAAAA,iBAAiB,EAAE,KAAKP;AAAzC,OAAD,CAAnB;AACD,KAlCwD;AAAA;;AAYzDQ,EAAAA,MAAM,GAAG;AACP,QAAM;AAAEC,MAAAA,kBAAF;AAAsBC,MAAAA;AAAtB,QAAiC,KAAKR,KAA5C;AAEA,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAE,KAAKJ,cAAhB;AAAgC,MAAA,KAAK,EAAEa,MAAM,CAACC,gBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,YAAD;AACE,MAAA,KAAK,EAAElB,uBADT;AAEE,MAAA,gBAAgB,EAAE,KAAKO,wBAFzB;AAGE,MAAA,OAAO,EAAE,KAAKG,iBAHhB;AAIE,MAAA,kBAAkB,EAAE,CAACO,MAAM,CAACE,IAAR,EAAcJ,kBAAd,CAJtB;AAKE,MAAA,MAAM,EAAEC,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAYD;;AA3BwD;AAA9Cd,c,CAGJkB,Y,GAAe;AACpBJ,EAAAA,MAAM,EAAEhB,uBADY;AAEpBW,EAAAA,mBAAmB,EAAEV;AAFD,C;AAkCxB,IAAMgB,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,gBAAgB,EAAE;AAChBK,IAAAA,QAAQ,EAAE,UADM;AAEhBC,IAAAA,GAAG,EAAE,CAAC,EAFU;AAIhBC,IAAAA,KAAK,EAAE,CAJS;AAKhBC,IAAAA,eAAe,EAAE,aALD;AAMhBC,IAAAA,KAAK,EAAE,CANS;AAOhBC,IAAAA,MAAM,EAAE;AAPQ,GADa;AAU/BT,EAAAA,IAAI;AACFU,IAAAA,SAAS,EAAE;AADT,KAECC,QAAQ,CAACC,MAAT,CAAgB;AACjBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,WAAW,EAAE,CADN;AAEPC,MAAAA,UAAU,EAAE;AAFL;AADQ,GAAhB,CAFD;AAV2B,CAAlB,CAAf","sourcesContent":["/*\n * @flow\n */\nimport * as React from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { HeaderButton, type VisibleButtonProps } from './HeaderButton';\nimport type { ViewStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport { OVERFLOW_BUTTON_TEST_ID } from './e2e';\nimport {\n  defaultOnOverflowMenuPress,\n  type OnOverflowMenuPressParams,\n} from './overflowMenuPressHandlers';\n\nexport type OverflowButtonProps = {\n  onOverflowMenuPress: OnOverflowMenuPressParams => any,\n  OverflowIcon: React.Element<any>,\n};\n\ntype Props = {\n  hiddenButtons: Array<React.Element<any>>,\n  buttonWrapperStyle?: ViewStyleProp,\n  testID: string,\n  ...$Exact<OverflowButtonProps>,\n};\n\nexport class OverflowButton extends React.Component<Props> {\n  overflowRef: ?View;\n\n  static defaultProps = {\n    testID: OVERFLOW_BUTTON_TEST_ID,\n    onOverflowMenuPress: defaultOnOverflowMenuPress,\n  };\n\n  setOverflowRef = (ref: ?View) => {\n    this.overflowRef = ref;\n  };\n\n  render() {\n    const { buttonWrapperStyle, testID } = this.props;\n\n    return (\n      <View>\n        <View ref={this.setOverflowRef} style={styles.overflowMenuView} />\n        <HeaderButton\n          title={OVERFLOW_BUTTON_TEST_ID}\n          getButtonElement={this.getOverflowButtonElement}\n          onPress={this.showOverflowPopup}\n          buttonWrapperStyle={[styles.icon, buttonWrapperStyle]}\n          testID={testID}\n        />\n      </View>\n    );\n  }\n\n  getOverflowButtonElement = () => this.props.OverflowIcon;\n\n  showOverflowPopup = () => {\n    const { onOverflowMenuPress, hiddenButtons } = this.props;\n    onOverflowMenuPress({ hiddenButtons, overflowButtonRef: this.overflowRef });\n  };\n}\n\nconst styles = StyleSheet.create({\n  overflowMenuView: {\n    position: 'absolute',\n    top: -10,\n    // TODO android actually has a little gap on the right of the menu\n    right: 0,\n    backgroundColor: 'transparent',\n    width: 1,\n    height: 1,\n  },\n  icon: {\n    marginTop: 2,\n    ...Platform.select({\n      android: {\n        marginRight: 9,\n        marginLeft: 7,\n      },\n    }),\n  },\n});\n"]},"metadata":{},"sourceType":"module"}