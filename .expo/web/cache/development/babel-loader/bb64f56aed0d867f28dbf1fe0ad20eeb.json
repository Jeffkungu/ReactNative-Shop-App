{"ast":null,"code":"var _jsxFileName = \"/Users/user/ReactNative Project/ReactNative-Shop-App/screens/user/EditProductScreen.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport HeaderButton from \"../../components/UI/HeaderButton\";\nimport * as productsActions from \"../../store/actions/products\";\n\nvar EditProductScreen = props => {\n  var prodId = props.navigation.getParam('productId');\n  var editedProduct = useSelector(state => state.products.userProducts.find(prod => prod.id === prodId));\n  var dispatch = useDispatch();\n  var [title, setTitle] = useState(editedProduct ? editedProduct.title : '');\n  var [imageUrl, setImageUrl] = useState(editedProduct ? editedProduct.imageUrl : '');\n  var [price, setPrice] = useState('');\n  var [description, setDescription] = useState(editedProduct ? editedProduct.description : '');\n  var submitHandler = useCallback(() => {\n    if (editedProduct) {\n      dispatch(productsActions.updateProduct(prodId, title, description, imageUrl));\n    } else {\n      dispatch(productsActions.createProduct(title, description, imageUrl, +price));\n    }\n\n    props.navigation.goBack();\n  }, [dispatch, prodId, title, description, imageUrl, price]);\n  useEffect(() => {\n    props.navigation.setParams({\n      submit: submitHandler\n    });\n  }, [submitHandler]);\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Title\"), React.createElement(TextInput, {\n    style: styles.input,\n    value: title,\n    onChangeText: text => setTitle(text),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Image URL\"), React.createElement(TextInput, {\n    style: styles.input,\n    value: imageUrl,\n    onChangeText: text => setImageUrl(text),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), editedProduct ? null : React.createElement(View, {\n    style: styles.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Price\"), React.createElement(TextInput, {\n    style: styles.input,\n    value: price,\n    onChangeText: text => setPrice(text),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Description\"), React.createElement(TextInput, {\n    style: styles.input,\n    value: description,\n    onChangeText: text => setDescription(text),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }))));\n};\n\nEditProductScreen.navigationOptions = navData => {\n  var submitFn = navData.navigation.getParam('submit');\n  return {\n    headerTitle: navData.navigation.getParam('productId') ? 'Edit Product' : 'Add Product',\n    headerRight: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, React.createElement(Item, {\n      title: \"Save\",\n      iconName: Platform.OS === 'android' ? 'md-checkmark' : 'ios-checkmark',\n      onPress: submitFn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }))\n  };\n};\n\nvar styles = StyleSheet.create({\n  form: {\n    margin: 20\n  },\n  formControl: {\n    width: '100%'\n  },\n  label: {\n    fontFamily: 'open-sans-bold',\n    marginVertical: 8\n  },\n  input: {\n    paddingHorizontal: 2,\n    paddingVertical: 5,\n    borderBottomColor: '#ccc',\n    borderBottomWidth: 1\n  }\n});\nexport default EditProductScreen;","map":{"version":3,"sources":["/Users/user/ReactNative Project/ReactNative-Shop-App/screens/user/EditProductScreen.js"],"names":["React","useState","useEffect","useCallback","HeaderButtons","Item","useSelector","useDispatch","HeaderButton","productsActions","EditProductScreen","props","prodId","navigation","getParam","editedProduct","state","products","userProducts","find","prod","id","dispatch","title","setTitle","imageUrl","setImageUrl","price","setPrice","description","setDescription","submitHandler","updateProduct","createProduct","goBack","setParams","submit","styles","form","formControl","label","input","text","navigationOptions","navData","submitFn","headerTitle","headerRight","Platform","OS","StyleSheet","create","margin","width","fontFamily","marginVertical","paddingHorizontal","paddingVertical","borderBottomColor","borderBottomWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  View,\n  ScrollView,\n  Text,\n  TextInput,\n  StyleSheet,\n  Platform\n} from 'react-native';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport HeaderButton from '../../components/UI/HeaderButton';\nimport * as productsActions from '../../store/actions/products';\n\nconst EditProductScreen = props => {\n  const prodId = props.navigation.getParam('productId');\n  const editedProduct = useSelector(state =>\n    state.products.userProducts.find(prod => prod.id === prodId)\n  );\n  const dispatch = useDispatch();\n\n  const [title, setTitle] = useState(editedProduct ? editedProduct.title : '');\n  const [imageUrl, setImageUrl] = useState(\n    editedProduct ? editedProduct.imageUrl : ''\n  );\n  const [price, setPrice] = useState('');\n  const [description, setDescription] = useState(\n    editedProduct ? editedProduct.description : ''\n  );\n\n  const submitHandler = useCallback(() => {\n    if (editedProduct) {\n      dispatch(\n        productsActions.updateProduct(prodId, title, description, imageUrl)\n      );\n    } else {\n      dispatch(\n        productsActions.createProduct(title, description, imageUrl, +price)\n      );\n    }\n    props.navigation.goBack();\n  }, [dispatch, prodId, title, description, imageUrl, price]);\n\n  useEffect(() => {\n    props.navigation.setParams({ submit: submitHandler });\n  }, [submitHandler]);\n\n  return (\n    <ScrollView>\n      <View style={styles.form}>\n        <View style={styles.formControl}>\n          <Text style={styles.label}>Title</Text>\n          <TextInput\n            style={styles.input}\n            value={title}\n            onChangeText={text => setTitle(text)}\n          />\n        </View>\n        <View style={styles.formControl}>\n          <Text style={styles.label}>Image URL</Text>\n          <TextInput\n            style={styles.input}\n            value={imageUrl}\n            onChangeText={text => setImageUrl(text)}\n          />\n        </View>\n        {editedProduct ? null : (\n          <View style={styles.formControl}>\n            <Text style={styles.label}>Price</Text>\n            <TextInput\n              style={styles.input}\n              value={price}\n              onChangeText={text => setPrice(text)}\n            />\n          </View>\n        )}\n        <View style={styles.formControl}>\n          <Text style={styles.label}>Description</Text>\n          <TextInput\n            style={styles.input}\n            value={description}\n            onChangeText={text => setDescription(text)}\n          />\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nEditProductScreen.navigationOptions = navData => {\n  const submitFn = navData.navigation.getParam('submit');\n  return {\n    headerTitle: navData.navigation.getParam('productId')\n      ? 'Edit Product'\n      : 'Add Product',\n    headerRight: (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Save\"\n          iconName={\n            Platform.OS === 'android' ? 'md-checkmark' : 'ios-checkmark'\n          }\n          onPress={submitFn}\n        />\n      </HeaderButtons>\n    )\n  };\n};\n\nconst styles = StyleSheet.create({\n  form: {\n    margin: 20\n  },\n  formControl: {\n    width: '100%'\n  },\n  label: {\n    fontFamily: 'open-sans-bold',\n    marginVertical: 8\n  },\n  input: {\n    paddingHorizontal: 2,\n    paddingVertical: 5,\n    borderBottomColor: '#ccc',\n    borderBottomWidth: 1\n  }\n});\n\nexport default EditProductScreen;\n"]},"metadata":{},"sourceType":"module"}