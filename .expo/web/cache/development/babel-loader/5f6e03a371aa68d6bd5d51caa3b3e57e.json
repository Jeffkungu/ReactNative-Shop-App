{"ast":null,"code":"var _jsxFileName = \"/Users/user/ReactNative Project/ReactNative-Shop-App/screens/user/UserProductsScreen.js\";\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport HeaderButton from \"../../components/UI/HeaderButton\";\nimport ProductItem from \"../../components/shop/ProductItem\";\nimport Colors from \"../../constants/Colors\";\nimport * as productsActions from \"../../store/actions/products\";\n\nvar UserProductsScreen = props => {\n  var userProducts = useSelector(state => state.products.userProducts);\n  var dispatch = useDispatch();\n\n  var editProductHandler = id => {\n    props.navigation.navigate('EditProduct', {\n      productId: id\n    });\n  };\n\n  var deleteHandler = id => {\n    Alert.alert('Are you sure?', 'Do you really want to delete this item?', [{\n      text: 'No',\n      style: 'default'\n    }, {\n      text: 'Yes',\n      style: 'destructive',\n      onPress: () => {\n        dispatch(productsActions.deleteProduct(id));\n      }\n    }]);\n  };\n\n  return React.createElement(FlatList, {\n    data: userProducts,\n    keyExtractor: item => item.id,\n    renderItem: itemData => React.createElement(ProductItem, {\n      image: itemData.item.imageUrl,\n      title: itemData.item.title,\n      price: itemData.item.price,\n      onSelect: () => {\n        editProductHandler(itemData.item.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, React.createElement(Button, {\n      color: Colors.primary,\n      title: \"Edit\",\n      onPress: () => {\n        editProductHandler(itemData.item.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }), React.createElement(Button, {\n      color: Colors.primary,\n      title: \"Delete\",\n      onPress: deleteHandler.bind(this, itemData.item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  });\n};\n\nUserProductsScreen.navigationOptions = navData => {\n  return {\n    headerTitle: 'Your Products',\n    headerLeft: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, React.createElement(Item, {\n      title: \"Menu\",\n      iconName: Platform.OS === 'android' ? 'md-menu' : 'ios-menu',\n      onPress: () => {\n        navData.navigation.toggleDrawer();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    })),\n    headerRight: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, React.createElement(Item, {\n      title: \"Add\",\n      iconName: Platform.OS === 'android' ? 'md-create' : 'ios-create',\n      onPress: () => {\n        navData.navigation.navigate('EditProduct');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }))\n  };\n};\n\nexport default UserProductsScreen;","map":{"version":3,"sources":["/Users/user/ReactNative Project/ReactNative-Shop-App/screens/user/UserProductsScreen.js"],"names":["React","useSelector","useDispatch","HeaderButtons","Item","HeaderButton","ProductItem","Colors","productsActions","UserProductsScreen","props","userProducts","state","products","dispatch","editProductHandler","id","navigation","navigate","productId","deleteHandler","Alert","alert","text","style","onPress","deleteProduct","item","itemData","imageUrl","title","price","primary","bind","navigationOptions","navData","headerTitle","headerLeft","Platform","OS","toggleDrawer","headerRight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,EAAwBC,IAAxB,QAAoC,iCAApC;AAEA,OAAOC,YAAP;AACA,OAAOC,WAAP;AACA,OAAOC,MAAP;AACA,OAAO,KAAKC,eAAZ;;AAEA,IAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAClC,MAAMC,YAAY,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeF,YAAzB,CAAhC;AACA,MAAMG,QAAQ,GAAGZ,WAAW,EAA5B;;AAEA,MAAMa,kBAAkB,GAAGC,EAAE,IAAI;AAC/BN,IAAAA,KAAK,CAACO,UAAN,CAAiBC,QAAjB,CAA0B,aAA1B,EAAyC;AAAEC,MAAAA,SAAS,EAAEH;AAAb,KAAzC;AACD,GAFD;;AAIA,MAAMI,aAAa,GAAIJ,EAAD,IAAQ;AAC5BK,IAAAA,KAAK,CAACC,KAAN,CAAY,eAAZ,EAA6B,yCAA7B,EAAwE,CACtE;AAAEC,MAAAA,IAAI,EAAE,IAAR;AAAcC,MAAAA,KAAK,EAAE;AAArB,KADsE,EAEtE;AACED,MAAAA,IAAI,EAAE,KADR;AAEEC,MAAAA,KAAK,EAAE,aAFT;AAGEC,MAAAA,OAAO,EAAE,MAAM;AACbX,QAAAA,QAAQ,CAACN,eAAe,CAACkB,aAAhB,CAA8BV,EAA9B,CAAD,CAAR;AACD;AALH,KAFsE,CAAxE;AAUD,GAXD;;AAaA,SACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEL,YADR;AAEE,IAAA,YAAY,EAAEgB,IAAI,IAAIA,IAAI,CAACX,EAF7B;AAGE,IAAA,UAAU,EAAEY,QAAQ,IAClB,oBAAC,WAAD;AACE,MAAA,KAAK,EAAEA,QAAQ,CAACD,IAAT,CAAcE,QADvB;AAEE,MAAA,KAAK,EAAED,QAAQ,CAACD,IAAT,CAAcG,KAFvB;AAGE,MAAA,KAAK,EAAEF,QAAQ,CAACD,IAAT,CAAcI,KAHvB;AAIE,MAAA,QAAQ,EAAE,MAAM;AACdhB,QAAAA,kBAAkB,CAACa,QAAQ,CAACD,IAAT,CAAcX,EAAf,CAAlB;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAET,MAAM,CAACyB,OADhB;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,OAAO,EAAE,MAAM;AACbjB,QAAAA,kBAAkB,CAACa,QAAQ,CAACD,IAAT,CAAcX,EAAf,CAAlB;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAeE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAET,MAAM,CAACyB,OADhB;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,OAAO,EAAEZ,aAAa,CAACa,IAAd,CAAmB,IAAnB,EAAyBL,QAAQ,CAACD,IAAT,CAAcX,EAAvC,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA6BD,CAlDD;;AAoDAP,kBAAkB,CAACyB,iBAAnB,GAAuCC,OAAO,IAAI;AAChD,SAAO;AACLC,IAAAA,WAAW,EAAE,eADR;AAELC,IAAAA,UAAU,EACR,oBAAC,aAAD;AAAe,MAAA,qBAAqB,EAAEhC,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,QAAQ,EAAEiC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,SAA5B,GAAwC,UAFpD;AAGE,MAAA,OAAO,EAAE,MAAM;AACbJ,QAAAA,OAAO,CAAClB,UAAR,CAAmBuB,YAAnB;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHG;AAaLC,IAAAA,WAAW,EACT,oBAAC,aAAD;AAAe,MAAA,qBAAqB,EAAEpC,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAC,KADR;AAEE,MAAA,QAAQ,EAAEiC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,WAA5B,GAA0C,YAFtD;AAGE,MAAA,OAAO,EAAE,MAAM;AACbJ,QAAAA,OAAO,CAAClB,UAAR,CAAmBC,QAAnB,CAA4B,aAA5B;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAdG,GAAP;AAyBD,CA1BD;;AA4BA,eAAeT,kBAAf","sourcesContent":["import React from 'react';\nimport { FlatList, Button, Platform, Alert } from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\n\nimport HeaderButton from '../../components/UI/HeaderButton';\nimport ProductItem from '../../components/shop/ProductItem';\nimport Colors from '../../constants/Colors';\nimport * as productsActions from '../../store/actions/products';\n\nconst UserProductsScreen = props => {\n  const userProducts = useSelector(state => state.products.userProducts);\n  const dispatch = useDispatch();\n\n  const editProductHandler = id => {\n    props.navigation.navigate('EditProduct', { productId: id });\n  };\n\n  const deleteHandler = (id) => {\n    Alert.alert('Are you sure?', 'Do you really want to delete this item?', [\n      { text: 'No', style: 'default' },\n      {\n        text: 'Yes',\n        style: 'destructive',\n        onPress: () => {\n          dispatch(productsActions.deleteProduct(id));\n        }\n      }\n    ]);\n  };\n\n  return (\n    <FlatList\n      data={userProducts}\n      keyExtractor={item => item.id}\n      renderItem={itemData => (\n        <ProductItem\n          image={itemData.item.imageUrl}\n          title={itemData.item.title}\n          price={itemData.item.price}\n          onSelect={() => {\n            editProductHandler(itemData.item.id);\n          }}\n        >\n          <Button\n            color={Colors.primary}\n            title=\"Edit\"\n            onPress={() => {\n              editProductHandler(itemData.item.id);\n            }}\n          />\n          <Button\n            color={Colors.primary}\n            title=\"Delete\"\n            onPress={deleteHandler.bind(this, itemData.item.id)}\n          />\n        </ProductItem>\n      )}\n    />\n  );\n};\n\nUserProductsScreen.navigationOptions = navData => {\n  return {\n    headerTitle: 'Your Products',\n    headerLeft: (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Menu\"\n          iconName={Platform.OS === 'android' ? 'md-menu' : 'ios-menu'}\n          onPress={() => {\n            navData.navigation.toggleDrawer();\n          }}\n        />\n      </HeaderButtons>\n    ),\n    headerRight: (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title=\"Add\"\n          iconName={Platform.OS === 'android' ? 'md-create' : 'ios-create'}\n          onPress={() => {\n            navData.navigation.navigate('EditProduct');\n          }}\n        />\n      </HeaderButtons>\n    )\n  };\n};\n\nexport default UserProductsScreen;\n"]},"metadata":{},"sourceType":"module"}