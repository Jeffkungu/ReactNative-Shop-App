{"ast":null,"code":"var _jsxFileName = \"/Users/user/ReactNative Project/ReactNative-Shop-App/node_modules/react-navigation-header-buttons/src/HeaderButtons.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { HeaderButton } from \"./HeaderButton\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { OverflowButton } from \"./OverflowButton\";\nimport { Item } from \"./HeaderItems\";\n\nvar textTransformer = label => Platform.OS === 'ios' ? label.charAt(0).toUpperCase() + label.substr(1) : label.toUpperCase();\n\nexport class HeaderButtons extends React.Component {\n  render() {\n    var {\n      visibleButtons,\n      hiddenButtons\n    } = getVisibleAndHiddenButtons(this.props);\n    var {\n      OverflowIcon,\n      overflowButtonWrapperStyle,\n      onOverflowMenuPress,\n      overflowButtonTestID\n    } = this.props;\n    return React.createElement(View, {\n      style: [styles.row, this.getEdgeMargin()],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, visibleButtons.length > 0 && this.renderVisibleButtons(visibleButtons), hiddenButtons.length > 0 && React.createElement(OverflowButton, {\n      hiddenButtons: hiddenButtons,\n      OverflowIcon: OverflowIcon,\n      buttonWrapperStyle: overflowButtonWrapperStyle,\n      onOverflowMenuPress: onOverflowMenuPress,\n      testID: overflowButtonTestID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  getEdgeMargin() {\n    return this.props.left ? styles.extraEdgeMarginOnLeft : styles.extraEdgeMarginOnRight;\n  }\n\n  renderVisibleButtons(visibleButtons) {\n    return visibleButtons.map(btn => {\n      var {\n        props: {\n          title\n        }\n      } = btn;\n      var RenderedHeaderButton = this.props.HeaderButtonComponent;\n      return React.createElement(RenderedHeaderButton, _extends({\n        key: title\n      }, btn.props, {\n        getButtonElement: renderVisibleButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }));\n    });\n  }\n\n}\nHeaderButtons.Item = Item;\nHeaderButtons.defaultProps = {\n  left: false,\n  HeaderButtonComponent: HeaderButton,\n  OverflowIcon: React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }\n  })\n};\n\nfunction getVisibleAndHiddenButtons(props) {\n  var visibleButtons = [];\n  var hiddenButtons = [];\n  React.Children.forEach(props.children, child => {\n    if (child && typeof child === 'object') {\n      if (!child.props.show || child.props.show === Item.SHOW_ALWAYS) {\n        visibleButtons.push(child);\n      } else {\n        hiddenButtons.push(child);\n      }\n    }\n  });\n  return {\n    visibleButtons,\n    hiddenButtons\n  };\n}\n\nfunction renderVisibleButton(visibleButtonProps) {\n  var {\n    IconComponent,\n    iconSize,\n    color,\n    iconName,\n    title,\n    buttonStyle\n  } = visibleButtonProps;\n  return IconComponent && iconName ? React.createElement(IconComponent, {\n    name: iconName,\n    color: color,\n    size: iconSize,\n    style: [styles.button, buttonStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }) : React.createElement(Text, {\n    style: [styles.text, {\n      color\n    }, buttonStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, textTransformer(title));\n}\n\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row'\n  },\n  extraEdgeMarginOnLeft: _objectSpread({}, Platform.select({\n    android: {\n      marginLeft: 5\n    },\n    default: {\n      marginLeft: 4\n    }\n  })),\n  extraEdgeMarginOnRight: _objectSpread({}, Platform.select({\n    android: {\n      marginRight: 4\n    },\n    default: {\n      marginRight: 5\n    }\n  })),\n  text: _objectSpread({}, Platform.select({\n    android: {\n      fontFamily: 'sans-serif-medium',\n      fontSize: 14,\n      marginHorizontal: 11\n    },\n    default: {\n      fontSize: 17,\n      marginHorizontal: 10\n    }\n  })),\n  button: {\n    marginHorizontal: 11\n  }\n});","map":{"version":3,"sources":["/Users/user/ReactNative Project/ReactNative-Shop-App/node_modules/react-navigation-header-buttons/src/HeaderButtons.js"],"names":["React","HeaderButton","OverflowButton","Item","textTransformer","label","Platform","OS","charAt","toUpperCase","substr","HeaderButtons","Component","render","visibleButtons","hiddenButtons","getVisibleAndHiddenButtons","props","OverflowIcon","overflowButtonWrapperStyle","onOverflowMenuPress","overflowButtonTestID","styles","row","getEdgeMargin","length","renderVisibleButtons","left","extraEdgeMarginOnLeft","extraEdgeMarginOnRight","map","btn","title","RenderedHeaderButton","HeaderButtonComponent","renderVisibleButton","defaultProps","Children","forEach","children","child","show","SHOW_ALWAYS","push","visibleButtonProps","IconComponent","iconSize","color","iconName","buttonStyle","button","text","StyleSheet","create","flexDirection","select","android","marginLeft","default","marginRight","fontFamily","fontSize","marginHorizontal"],"mappings":"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","sourcesContent":["/*\n * @flow\n */\nimport * as React from 'react';\nimport { HeaderButton, type HeaderButtonProps, type VisibleButtonProps } from './HeaderButton';\nimport { StyleSheet, Platform, View, Text } from 'react-native';\nimport { OverflowButton, type OverflowButtonProps } from './OverflowButton';\nimport type { ViewStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport { Item } from './HeaderItems';\n\nconst textTransformer = (label: string) =>\n  Platform.OS === 'ios' ? label.charAt(0).toUpperCase() + label.substr(1) : label.toUpperCase();\n\ntype HeaderButtonsProps = {\n  children: React.Node,\n  left: boolean,\n  overflowButtonWrapperStyle?: ViewStyleProp,\n  overflowButtonTestID?: string,\n  HeaderButtonComponent: React.ComponentType<any>,\n  ...$Exact<OverflowButtonProps>,\n};\n\nexport class HeaderButtons extends React.Component<HeaderButtonsProps> {\n  static Item = Item;\n  static defaultProps = {\n    left: false,\n    HeaderButtonComponent: HeaderButton,\n    OverflowIcon: <View />,\n  };\n\n  render() {\n    const { visibleButtons, hiddenButtons } = getVisibleAndHiddenButtons(this.props);\n    const {\n      OverflowIcon,\n      overflowButtonWrapperStyle,\n      onOverflowMenuPress,\n      overflowButtonTestID,\n    } = this.props;\n\n    return (\n      <View style={[styles.row, this.getEdgeMargin()]}>\n        {visibleButtons.length > 0 && this.renderVisibleButtons(visibleButtons)}\n        {hiddenButtons.length > 0 && (\n          <OverflowButton\n            hiddenButtons={hiddenButtons}\n            OverflowIcon={OverflowIcon}\n            buttonWrapperStyle={overflowButtonWrapperStyle}\n            onOverflowMenuPress={onOverflowMenuPress}\n            testID={overflowButtonTestID}\n          />\n        )}\n      </View>\n    );\n  }\n\n  getEdgeMargin() {\n    return this.props.left ? styles.extraEdgeMarginOnLeft : styles.extraEdgeMarginOnRight;\n  }\n\n  renderVisibleButtons(visibleButtons: Array<React.Element<any>>): Array<React.Element<any>> {\n    return visibleButtons.map(btn => {\n      const {\n        props: { title },\n      } = btn;\n\n      const RenderedHeaderButton = this.props.HeaderButtonComponent;\n\n      return (\n        <RenderedHeaderButton key={title} {...btn.props} getButtonElement={renderVisibleButton} />\n      );\n    });\n  }\n}\n\nfunction getVisibleAndHiddenButtons(props) {\n  let visibleButtons = [];\n  let hiddenButtons = [];\n\n  React.Children.forEach(props.children, child => {\n    if (child && typeof child === 'object') {\n      // TODO implement ifRoom, which will be tricky\n      if (!child.props.show || child.props.show === Item.SHOW_ALWAYS) {\n        visibleButtons.push(child);\n      } else {\n        hiddenButtons.push(child);\n      }\n    }\n  });\n\n  return {\n    visibleButtons,\n    hiddenButtons,\n  };\n}\n\nfunction renderVisibleButton(visibleButtonProps: VisibleButtonProps): React.Element<any> {\n  const { IconComponent, iconSize, color, iconName, title, buttonStyle } = visibleButtonProps;\n\n  return IconComponent && iconName ? (\n    <IconComponent\n      name={iconName}\n      color={color}\n      size={iconSize}\n      style={[styles.button, buttonStyle]}\n    />\n  ) : (\n    <Text style={[styles.text, { color }, buttonStyle]}>{textTransformer(title)}</Text>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: { flexDirection: 'row' },\n  extraEdgeMarginOnLeft: {\n    ...Platform.select({\n      android: {\n        marginLeft: 5,\n      },\n      default: {\n        marginLeft: 4,\n      },\n    }),\n  },\n  extraEdgeMarginOnRight: {\n    ...Platform.select({\n      android: {\n        marginRight: 4,\n      },\n      default: {\n        marginRight: 5,\n      },\n    }),\n  },\n  text: {\n    ...Platform.select({\n      android: {\n        fontFamily: 'sans-serif-medium',\n        fontSize: 14,\n        marginHorizontal: 11,\n      },\n      default: {\n        fontSize: 17,\n        marginHorizontal: 10,\n      },\n    }),\n  },\n  button: {\n    marginHorizontal: 11,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}